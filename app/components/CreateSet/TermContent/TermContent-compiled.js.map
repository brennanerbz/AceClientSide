{"version":3,"sources":["TermContent.js"],"names":[],"mappings":"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","file":"TermContent-compiled.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nexport default class TermContent extends Component {\n\tstatic propTypes = {\n\t\t/* TODO: add all propTypes */\n\t}\n\n    state = {\n        term: null,\n        definition: null,\n        triggered: false\n    }\n\n    loadItem(item) {\n        if(item !== undefined && item !== null) {\n            if(item.target !== null) this.setState({ term: item.target })\n            if(item.cue !== null) this.setState({ definition: item.cue })\n        }\n    }\n\n    trigger(node1, node2) {\n        $(node1).add(node2).trigger('input')\n    }\n\n    componentDidMount() {\n        const { item, active_row, active_side, index, total_count, rendered } = this.props;\n        this.loadItem(item) \n        let term_node = this.refs[`autocomplete_term_${index}`],\n            def_node = this.refs[`autocomplete_def_${index}`]\n        if(active_row && active_side == 0) {\n            term_node.focus()\n        }\n        /* Autosizing textarea */\n        $(term_node).add(def_node).on('input', function () {\n            this.style.height = 'auto';\n            this.style.height = (this.scrollHeight) + 'px';\n        })\n        setTimeout(() => {\n            this.trigger(term_node, def_node)\n            if(index == total_count - 1) { \n                console.log(index)\n                console.log(total_count)\n                this.props.finishedRendering() \n            }\n        }, 1)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { index } = this.props;\n        let term_node = this.refs[`autocomplete_term_${index}`],\n            def_node = this.refs[`autocomplete_def_${index}`]\n        if(nextProps.resizing) {\n            this.trigger(term_node, def_node)\n            return;\n        }\n        if(!this.state.triggered) {\n           this.trigger(term_node, def_node)\n           this.setState({triggered: true}); \n        }\n        if(this.props.item !== nextProps.item) {\n            if(nextProps.item !== null && nextProps.item.target !== null) {\n                this.setState({\n                    term: nextProps.item.target,\n                });\n            } else {\n                this.setState({\n                    term: ''\n                });\n            }\n            if(nextProps.item !== null && nextProps.item.cue !== null) {\n                this.setState({\n                    definition: nextProps.item.cue,\n                });\n            } else {\n                this.setState({\n                    definition: ''\n                });\n            }\n        }\n    }\n \n    render() {\n        const { active_row, index } = this.props;\n      \treturn (\n            <div className={classnames({\"TermContent-focus\": active_row, \"TermContent\": !active_row} )}>\n                <div className=\"TermContent-wrap\">          \n                    <div className={classnames(\"TermContent-side\", {\"word-side-focus\": active_row}, {'word-side': !active_row})}\n                         ref={`termContentWord${index}`}\n                         onClick={() => { \n                            this.props.activateRow()\n                            this.props.focusSide(0)\n                            this.refs[`autocomplete_term_${index}`].focus()\n                        }}>\n                        <textarea\n                            className=\"AutoExpandTextArea-textarea\"\n                            ref={`autocomplete_term_${index}`}\n                            tabIndex={2}\n                            rows=\"1\"\n                            onFocus={() => {\n                                this.props.activateRow()\n                                this.props.focusSide(0)\n                            }}\n                            onChange={(e) =>{\n                                this.setState({term: e.target.value});\n                            }}\n                            onInput={(e) => {\n\n                            }}\n                            onBlur={() => {\n                                if(this.state.term !== null && this.state.term.length > 0) {\n                                    this.props.saveTerm(this.state.term) \n                                }\n                                this.props.deactivateRow()\n                            }}\n                            value={ this.state.term }\n                        />                                \n                    </div>\n                    <div className=\"TermContent-side def-side\" \n                         ref={`termContentDef${index}`}\n                         onClick={() => { \n                            this.props.activateRow()\n                            this.props.focusSide(1)\n                            this.refs[`autocomplete_def_${index}`].focus()\n                         }}>\n                        <textarea\n                            className=\"AutoExpandTextArea-textarea\"\n                            ref={`autocomplete_def_${index}`}\n                            tabIndex={2}\n                            rows=\"1\"\n                            onFocus={() => {\n                                this.props.activateRow()\n                                this.props.focusSide(1)\n                            }}\n                            onKeyDown={(e) => {\n                                if(this.props.index !== this.props.total_count -1) return;\n                                if(e.which == 9) {\n                                    e.preventDefault()\n                                    if(this.props.index == this.props.total_count - 1) \n                                        this.props.addRow()\n                                }\n                            }}\n                            onChange={(e) =>{\n                                this.setState({definition: e.target.value});\n                            }}\n                            onBlur={() => {\n                                if(this.state.definition !== null && this.state.definition.length > 0){\n                                   this.props.saveDefinition(this.state.definition) \n                                }\n                                this.props.deactivateRow()\n                            }}\n                            value={ this.state.definition }\n                        />\n                    </div>\n                </div>\n            </div>\n  \t    );\n    }\n}\n\n// item={this.state.item}\n// index={this.state.index}\n// total_count={this.props.total_count}\n// active_row={this.state.active_row}\n// active_side={this.state.active_side}\n// activateRow={() => this.setState({ active_row: true })}\n// deactivateRow={() => this.setState({ active_row: false })}\n// focusSide={(value) => this.setState({ active_side: value })}\n// enterTerm={(term) => this.setState({ term: term}) }\n// saveTerm={this.saveTerm}\n// enterDefinition={(def) => this.setState({definition: def})}\n// saveDefinition={this.saveDefinition}\n// addRow={this.props.addRow} \n\n\n\n/*           \n// computeStyle = () => {\n//     let { index, active_side, subjects } = this.props,\n//           node, rect;\n//     if(subjects == (undefined || null)) return;\n\n//     if (active_side === 0) { node = this.refs['termContentWord' + index] } \n//     else { node = this.refs['termContentDef' + index] }\n\n//     rect = node.getBoundingClientRect();\n//     return rect;\n// }\n*/\n\n/*\n\n*/\n\n/*  --------- Definition ------------\n\nitems={term_choices !== undefined ? term_choices : []}\ngetItemValue={(item) => item}\nonSelect={(value, item) => {\n    this.setState({ terms: [ item ] })                                     \n}}\nonInput={(event, value) => {\n    if(subjects !== undefined && subjects.length > 0) {\n    this.setState({loading: true})\n        getTermSuggestions(value, (items) => {\n            this.setState({ terms: items, loading: false })\n        })\n    }\n}}\nrenderItem={(term, isHighlighted, index) => (\n    <div className={classnames({ 'first_item': index == 0 })}\n         style={isHighlighted ? styles.highlightedItem : styles.item}\n         key={term.abbr}\n         id={term.abbr}>\n         {term}\n    </div>\n)}\n---------------------- ---------*/\n\n\n/*  --------- Definition ------------\nitems={def_choices !== undefined ? def_choices : []}\ngetItemValue={(_item) => _item.cue}\nonSelect={(value, _item) => {\n    this.setState({ defs: [ _item.cue ]})\n    updateAssociation(association, \n    {name: 'item', prop: _item}, \n    {name: 'item_id', prop: _item.id },\n    {name: 'item_adopted', prop: true})\n}}\nonInput={(event, value) => value}\nonFocus={(event, value) => {\n    if(subjects !== undefined && subjects.length > 0 && item !== null) {\n        this.setState({loading: true})\n        getDefSuggestions(item.id)\n        setTimeout(() => {\n            getDefSuggestions(item.id)\n        }, 250)\n    }\n}}\nrenderItem={(_item, isHighlighted, index) => (\n    <div className={classnames({ 'first_item': index == 0 })}\n         style={isHighlighted ? styles.highlightedItem : styles.item}\n         key={_item.abbr}\n         id={_item.abbr}>\n         {_item.cue}\n    </div>\n)}\n---------------------- ---------*/\n             "]}