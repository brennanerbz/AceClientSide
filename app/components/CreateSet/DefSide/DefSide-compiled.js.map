{"version":3,"sources":["DefSide.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BACuB,YAAY;;;;wCAEV,8BAA8B;;;;iCAKjC,uBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE7C,OAAO,CAAC,mCAAmC,CAAC,CAAC;;IAExB,OAAO;WAAP,OAAO;;cAAP,OAAO;;SACR;AAClB,SAAM,EAAE,iBAAU,IAAI;AACtB,WAAQ,EAAE,iBAAU,IAAI;AACxB,UAAO,EAAE,iBAAU,IAAI;AACvB,iBAAc,EAAE,iBAAU,IAAI;AAC9B,cAAW,EAAE,iBAAU,MAAM;AAC7B,aAAU,EAAE,iBAAU,MAAM;GAC5B;;;;AAEU,UAVS,OAAO,CAUf,KAAK,EAAE;;;;;AACjB,kFAAM,KAAK,EAAE;;OAOf,WAAW,GAAG,YAAM,EAEnB;;OAED,WAAW,GAAG,YAAM;gBACoB,MAAK,KAAK;OAAzC,UAAU,UAAV,UAAU;OAAE,cAAc,UAAd,cAAc;;AAClC,OAAI,UAAU,KAAK,MAAM,EAAE;AAC1B,kBAAc,EAAE,CAAA;IAChB;GACD;;OAED,SAAS,GAAG,YAAM;OACT,KAAK,GAAK,MAAK,KAAK,CAApB,KAAK;;AACb,SAAK,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,SAAS,EAAE,CAAA;GAC7C;;AApBC,MAAI,CAAC,KAAK,GAAG;AACX,OAAI,EAAE,EAAE;AACR,UAAO,EAAE,KAAK;GACf,CAAA;EACF;;cAhBmB,OAAO;;SAkCrB,kBAAG;iBAOO,IAAI,CAAC,KAAK;OANjB,KAAK,WAAL,KAAK;OACX,WAAW,WAAX,WAAW;OACX,iBAAiB,WAAjB,iBAAiB;OACjB,iBAAiB,WAAjB,iBAAiB;OACjB,IAAI,WAAJ,IAAI;OACJ,WAAW,WAAX,WAAW;OACX,QAAQ,WAAR,QAAQ;;;AAEV,UACC;;MAAK,SAAS,EAAC,SAAS;IACvB;;OAAK,SAAS,EAAC,kBAAkB;KAChC,qFACS,IAAI,CAAC,KAAK;;AAEd,iBAAW,EAAE,IAAI,CAAC,WAAW,AAAC;AACjC,eAAS,EAAC,6BAA6B;AACjC,SAAG,mBAAiB,KAAK,AAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6B5B;KACH;IACD,CACL;GACF;;;gBApFmB,OAAO;AAAP,QAAO,+BAAP,OAAO,KAAP,OAAO;QAAP,OAAO;;;qBAAP,OAAO","file":"DefSide-compiled.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nimport Autocomplete from '../Autocomplete/Autocomplete';\nimport { getStates,\n\t\t matchStateToTerm,\n\t\t sortStates,\n\t\t styles,\n\t\t fakeRequest } from '../Autocomplete/Utils';\n\nrequire('../Autocomplete/Autocomplete.scss');\n\nexport default class DefSide extends Component {\n\tstatic propTypes = {\t\n\t\tonBlur: PropTypes.func,\n\t\tonChange: PropTypes.func,\n\t\tonFocus: PropTypes.func,\n\t\tflipActiveSide: PropTypes.func,\t\t\n\t\tplaceholder: PropTypes.string,\n\t\tactiveSide: PropTypes.string,\n\t}\n\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t    defs: [],\n\t    loading: false\n\t  }\n\t}\n\n\thandleClick = () => {\n\n\t}\n\n\tswitchToDef = () => {\n\t\tconst { activeSide, flipActiveSide } = this.props;\n\t\tif (activeSide === 'word') {\n\t\t\tflipActiveSide()\n\t\t}\n\t}\n\n\tautoFocus = () => {\n\t\tconst { index } = this.props;\n\t\tthis.refs['autocomplete' + index].focusSide()\n\t}\n\n\trender() {\n\t\tconst { index, \n\t\t\t\tdef_choices, \n\t\t\t\tgetDefSuggestions, \n\t\t\t\tupdateAssociation,\n\t\t\t\titem, \n\t\t\t\tassociation,\n\t\t\t\tsubjects } = this.props;\n\t\t// console.log(item.cue)\n\t\treturn(\n\t\t\t<div className=\"DefSide\">\n\t\t\t\t<div className=\"DefSide-textarea\">\n\t\t\t\t\t<Autocomplete\n\t\t\t\t      {...this.props}\n\t\t\t\t      // debug={true}\n\t\t\t\t      switchToDef={this.switchToDef}\n\t\t\t\t\t  className=\"AutoExpandTextArea-textarea\"\n\t\t\t          ref={`autocomplete${index}`}\n\t                  // items={def_choices !== undefined ? def_choices : []}\n\t                  // getItemValue={(_item) => _item.cue}\n\t                  // onSelect={(value, _item) => {\n\t                  //    this.setState({ defs: [ _item.cue ]})\n\t                  //    updateAssociation(association, \n\t                  //    \t\t\t\t  {name: 'item', prop: _item}, \n\t                  //    \t\t\t\t  {name: 'item_id', prop: _item.id },\n\t                  //    \t\t\t\t  {name: 'item_adopted', prop: true})\n\t                  // }}\n\t                  // onInput={(event, value) => value}\n\t            //       onFocus={(event, value) => {\n\t            //          if(subjects !== undefined && subjects.length > 0 && item !== null) {\n\t         \t\t\t// \tthis.setState({loading: true})\n\t         \t\t\t// \tgetDefSuggestions(item.id)\n\t         \t\t\t// \tsetTimeout(() => {\n\t         \t\t\t// \t\tgetDefSuggestions(item.id)\n\t         \t\t\t// \t}, 250)\n\t         \t\t\t// }\n\t            //        }}\n\t                  // renderItem={(_item, isHighlighted, index) => (\n\t                  //    <div\n\t                  //      className={classnames({ 'first_item': index == 0 })}\n\t                  //      style={isHighlighted ? styles.highlightedItem : styles.item}\n\t                  //      key={_item.abbr}\n\t                  //      id={_item.abbr}>\n\t                  //      {_item.cue}\n\t                  //    </div>\n\t                  //  )}\t\t\t\t\t          \n\t\t\t        />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\t\t\t\t"]}