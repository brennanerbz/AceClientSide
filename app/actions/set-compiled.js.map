{"version":3,"sources":["set.js"],"names":[],"mappings":"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","file":"set-compiled.js","sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\nimport keyMirror from 'key-mirror';\nimport request from 'superagent';\n\nconst api_url = 'http://127.0.0.1:5000/webapi/v2.0';\n\n/*\n@params set_id \n*/\nexport const REQUEST_SET = 'REQUEST_SET';\nexport const RECEIVE_SET_SUCCESS = 'RECEIVE_SET_SUCCESS';\nexport const RECEIVE_SET_FAILURE = 'RECEIVE_SET_FAILURE';\nexport const RECEIVE_ASSIGNMENTS_SUCCESS = 'RECEIVE_ASSIGNMENTS_SUCCESS';\nexport function fetchSet(set_id) {\n\treturn (dispatch, getState) => {\n\t\tif(getState().sets.isFetchingAssignments || getState().user.isFetchingUser) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(fetchSet(set_id))\n\t\t\t}, 5)\n\t\t\treturn;\n\t\t}\n\t\tdispatch({type: REQUEST_SET})\n\t\tlet set,\n\t\t\tuser = getState().user.user;\n\t\taxios.get(`${api_url}/sets/${set_id}`).then((res) => { \n\t\t\tset = res.data\n\t\t\tdispatch({\n\t\t\t\ttype: RECEIVE_SET_SUCCESS,\n\t\t\t\tset\n\t\t\t})\n\t\t}).catch((err) => {\n\t\t\tdispatch({\n\t\t\t\ttype: RECEIVE_SET_FAILURE,\n\t\t\t\terror: Error(err),\n\t\t\t\terr: err\n\t\t\t})\n\t\t})\n\t}\n}\n\n/*\n@params set_id\nGET /sets/<id>/associations/?start=0&end=99\n*/\nexport const REQUEST_ASSOCIATIONS = 'REQUEST_ASSOCIATIONS';\nexport const RECEIVE_ASSOCIATIONS_SUCCESS = 'RECEIVE_ASSOCIATIONS_SUCCESS';\nexport const RECEIVE_ASSOCIATIONS_FAILURE = 'RECEIVE_ASSOCIATIONS_FAILURE';\nexport function fetchAssociations(set_id) {\n\treturn (dispatch, getState) => {\n\t\tdispatch({type: REQUEST_ASSOCIATIONS})\n\t\tlet associations;\n\t\taxios.get(`${api_url}/sets/${set_id}/associations/?start=${0}&end=${99}`)\n\t\t.then((res) => {\n\t\t\tassociations = res.data.associations\n\t\t\tdispatch({\n\t\t\t\ttype: RECEIVE_ASSOCIATIONS_SUCCESS,\n\t\t\t\tassociations\n\t\t\t})\n\t\t}).catch(err => {\n\t\t\tdispatch({\n\t\t\t\ttype: RECEIVE_ASSOCIATIONS_FAILURE,\n\t\t\t\terror: Error(err),\n\t\t\t\terr: err\n\t\t\t})\n\t\t})\n\t}\n}\n\n\n/*\n@params assignment_id\n*/\nexport const REQUEST_ASSIGNMENT = 'REQUEST_ASSIGNMENT';\nexport const RECEIVE_ASSIGNMENT_SUCCESS = 'RECEIVE_ASSIGNMENT_SUCCESS';\nexport const RECEIVE_ASSIGNMENT_FAILURE = 'RECEIVE_ASSIGNMENT_FAILURE';\nexport const HAS_NOT_STUDIED = 'HAS_NOT_STUDIED';\nexport function fetchAssignment(id) {\n\treturn async(dispatch, getState) => {\n\t\tdispatch({type: REQUEST_ASSIGNMENT})\n\t\ttry {\n\t\t\tlet assignment;\n\t\t\tawait axios.get(`${api_url}/assignments/${id}`).then((res) => assignment = res.data)\n\t\t\tconsole.log(assignment)\n\t\t\tdispatch({type: RECEIVE_ASSIGNMENT_SUCCESS, assignment})\n\t\t} catch(err) {\n\t\t\tdispatch({\n\t\t\t\ttype: RECEIVE_ASSIGNMENT_FAILURE,\n\t\t\t\terror: Error(err)\n\t\t\t})\n\t\t}\n\t}\n}\n\n\n/*\n@params user_id, set_id\n*/\nexport const UPDATE_ASSIGNMENT_SUCCESS = 'UPDATE_ASSIGNMENT_SUCCESS';\nexport const UPDATE_ASSIGNMENT_FAILURE = 'UPDATE_ASSIGNMENT_FAILURE';\nexport function updateAssignent(id) {\n\treturn async(dispatch, getState) => {\n\t\ttry {\n\t\t\tawait axios.put(`${api_url}/assignments${id}`).then((res) => {\n\t\t\t\tlet new_assignment = res.data;\n\t\t\t\tconsole.log(\"new_assignment\")\n\t\t\t\tconsole.log(new_assignment)\n\t\t\t\tdispatch({type: UPDATE_ASSIGNMENT_SUCCESS, new_assignment })\n\t\t\t})\n\t\t} catch(err) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_ASSIGNMENT_FAILURE,\n\t\t\t\terror: Error(err)\n\t\t\t})\n\t\t}\n\t}\n}\n\n\n \nexport const CLEAR_SETVIEW = 'CLEAR_SETVIEW';\nexport function clearSetView() {\n\treturn {\n\t\ttype: CLEAR_SETVIEW\n\t}\n}\n"]}