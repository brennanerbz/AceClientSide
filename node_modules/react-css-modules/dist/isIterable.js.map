{"version":3,"sources":["isIterable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,IAAI,eAAe,YAAA;IACf,mBAAmB,YAAA,CAAC;;AAExB,eAAe,GAAG,0BAAa,MAAM,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC;AAC1D,mBAAmB,GAAG,YAAY;;;;;;;;AAAC;kBAQpB,UAAC,MAAM,EAAK;AACvB,QAAI,QAAQ,YAAA,CAAC;;AAEb,QAAI,CAAC,wBAAW,MAAM,CAAC,EAAE;AACrB,eAAO,KAAK,CAAC;KAChB;;AAED,QAAI,eAAe,EAAE;AACjB,gBAAQ,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;KACtC,MAAM;AACH,gBAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;KAC1C;;AAED,WAAO,0BAAa,QAAQ,CAAC,CAAC;CACjC","file":"isIterable.js","sourcesContent":["import _ from 'lodash';\n\nlet ITERATOR_SYMBOL,\n    OLD_ITERATOR_SYMBOL;\n\nITERATOR_SYMBOL = _.isFunction(Symbol) && Symbol.iterator;\nOLD_ITERATOR_SYMBOL = '@@iterator';\n\n/**\n * @see https://github.com/lodash/lodash/issues/1668\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols\n * @param {Object} target\n * @returns {boolean}\n */\nexport default (target) => {\n    let iterator;\n\n    if (!_.isObject(target)) {\n        return false;\n    }\n\n    if (ITERATOR_SYMBOL) {\n        iterator = target[ITERATOR_SYMBOL];\n    } else {\n        iterator = target[OLD_ITERATOR_SYMBOL];\n    }\n\n    return _.isFunction(iterator);\n};\n"],"sourceRoot":"/source/"}